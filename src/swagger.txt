openapi: 3.0.3
info:
  title: My API Documentation
  description: My API description goes here.
  version: 1.0.0
servers:
  - url: https://localhost
tags:
  - name: Users
    description: Everything about users.
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Products
    description: Everything about products.
paths:
  /api/v1/users/register:
    post:
      tags:
        - Users
      summary: Creates user with given body info.
      description: Creates user with given body info.
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Bad request
  /api/v1/users/login:
    post:
      tags:
        - Users
      summary: Get user by ID
      description: Get user information by their ID.
      operationId: loginUser
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /api/v1/users/{userId}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Get user information by their ID.
      operationId: getUser
      parameters:
        - name: userId
          in: path
          description: ID of the user to retrieve.
          required: true
          schema:
            type: string
          example: "1"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      tags:
        - Users
      summary: Get user by ID
      description: Get user information by their ID.
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: ID of the user to retrieve.
          required: true
          schema:
            type: string
          example: "1"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      tags:
        - Users
      summary: Get user by ID
      description: Get user information by their ID.
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: ID of the user to retrieve.
          required: true
          schema:
            type: string
          example: "1"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
components:
  schemas:
   User:
     type: object
     properties:
       username:
         type: string
         format: string
         example: "John Doe"
       email:
         type: string
         format: email
         example: "John Doe"
       avatar:
         type: string
         format: url
         example: "http://to_cool_image.com"

